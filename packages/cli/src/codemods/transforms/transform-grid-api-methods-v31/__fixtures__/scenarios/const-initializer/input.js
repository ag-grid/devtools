import { createGrid } from '@ag-grid-community/core';

const gridApi = createGrid(document.body, {
  columnDefs: [],
  rowData: [],
});

gridApi?.paginationSetPageSize();
gridApi.paginationSetPageSize(value);
gridApi.setAdvancedFilterBuilderParams();
gridApi.setAdvancedFilterBuilderParams(value);
gridApi.setAdvancedFilterParent(value);
gridApi.setAlwaysShowHorizontalScroll(value);
gridApi.setAlwaysShowVerticalScroll(value);
gridApi.setAnimateRows(value);
gridApi.setAutoGroupColumnDef(value);
gridApi?.setAutoGroupColumnDef(value, 'api');
gridApi.setCacheBlockSize(value);
gridApi.setColumnDefs(value);
gridApi.setColumnDefs(value, 'api');
gridApi.setColumnTypes(value);
gridApi.setColumnTypes(value, 'api');
gridApi.setDatasource(value);
gridApi.setDataTypeDefinitions(value);
gridApi.setDefaultColDef(value);
gridApi.setDefaultColDef(value, 'api');
gridApi.setDeltaSort(value);
gridApi.setDoesExternalFilterPass(value);
gridApi.setDomLayout();
gridApi.setDomLayout(value);
gridApi.setEnableAdvancedFilter(value);
gridApi.setEnableCellTextSelection(value);
gridApi.setExcludeHiddenColumnsFromQuickFilter(value);
gridApi.setExcludeHiddenColumnsFromQuickFilter(value, 'api');
gridApi.setFillHandleDirection(value);
gridApi.setFloatingFiltersHeight();
gridApi.setFloatingFiltersHeight(value);
gridApi.setFunctionsReadOnly(value);
gridApi.setGetBusinessKeyForNode(value);
gridApi.setGetChartToolbarItems(value);
gridApi.setGetChildCount(value);
gridApi.setGetContextMenuItems(value);
gridApi.setGetDocument(value);
gridApi.setGetGroupRowAgg(value);
gridApi.setGetMainMenuItems(value);
gridApi.setGetRowClass(value);
gridApi.setGetRowHeight(value);
gridApi.setGetRowStyle(value);
gridApi.setGetServerSideGroupKey(value);
gridApi.setGetServerSideGroupLevelParams(value);
gridApi.setGroupDisplayType(value);
gridApi.setGroupHeaderHeight();
gridApi.setGroupHeaderHeight(value);
gridApi.setGroupIncludeFooter(value);
gridApi.setGroupIncludeTotalFooter(value);
gridApi.setGroupRemoveLowestSingleChildren(value);
gridApi.setGroupRemoveSingleChildren(value);
gridApi.setHeaderHeight();
gridApi.setHeaderHeight(value);
gridApi.setIncludeHiddenColumnsInAdvancedFilter(value);
gridApi.setIncludeHiddenColumnsInQuickFilter(value);
gridApi.setInitialGroupOrderComparator(value);
gridApi.setIsApplyServerSideTransaction(value);
gridApi.setIsExternalFilterPresent(value);
gridApi.setIsFullWidthRow(value);
gridApi.setIsRowMaster(value);
gridApi.setIsRowSelectable(value);
gridApi.setIsServerSideGroup(value);
gridApi.setIsServerSideGroupOpenByDefault(value);
gridApi.setNavigateToNextCell(value);
gridApi.setNavigateToNextHeader(value);
gridApi.setPagination(value);
gridApi.setPaginationNumberFormatter(value);
gridApi.setPinnedBottomRowData();
gridApi.setPinnedBottomRowData(value);
gridApi.setPinnedTopRowData();
gridApi.setPinnedTopRowData(value);
gridApi.setPivotGroupHeaderHeight();
gridApi.setPivotGroupHeaderHeight(value);
gridApi.setPivotHeaderHeight();
gridApi.setPivotHeaderHeight(value);
gridApi.setPivotMode(value);
gridApi.setPopupParent(value);
gridApi.setPostProcessPopup(value);
gridApi.setPostSortRows(value);
gridApi.setProcessCellForClipboard(value);
gridApi.setProcessCellFromClipboard(value);
gridApi.setProcessPivotResultColDef(value);
gridApi.setProcessPivotResultColGroupDef(value);
gridApi.setProcessRowPostCreate(value);
gridApi.setQuickFilter(value);
gridApi.setQuickFilterMatcher();
gridApi.setQuickFilterMatcher(value);
gridApi.setQuickFilterParser();
gridApi.setQuickFilterParser(value);
gridApi.setRowClass(value);
gridApi.setRowData(value);
gridApi.setRowGroupPanelShow(value);
gridApi.setSendToClipboard(value);
gridApi.setServerSideDatasource(value);
gridApi.setSideBar(value);
gridApi.setSuppressClipboardPaste(value);
gridApi.setSuppressModelUpdateAfterUpdateTransaction(value);
gridApi.setSuppressMoveWhenRowDragging(value);
gridApi.setSuppressRowClickSelection(value);
gridApi.setSuppressRowDrag(value);
gridApi.setTabToNextCell(value);
gridApi.setTabToNextHeader(value);
gridApi.setTreeData(value);
gridApi.setViewportDatasource(value);
